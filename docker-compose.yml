services:
  backend:
    build: ./backend
    container_name: python-backend
    network_mode: "host"
    environment:
      - FLASK_ENV=production
    volumes:
      - ./backend:/app
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: vanilla-frontend
    network_mode: "host"
    volumes:
      - ./frontend:/app
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    network_mode: "host"
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped